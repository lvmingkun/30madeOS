     1 00000000                                 [FORMAT "WCOFF"]				; 生成对象文件的模式	
     2 00000000                                 [INSTRSET "i486p"]				; 使用 486 兼容模式
     3 00000000                                 [BITS 32]						; 使用 32 位模式机器语言
     4 00000000                                 [FILE "a_nask.nas"]				; 源文件信息名
     5 00000000                                 
     6 00000000                                 	GLOBAL _api_putchar, _api_getkey
     7 00000000                                 	GLOBAL _api_end
     8 00000000                                 	GLOBAL _api_putstr0
     9 00000000                                 	GLOBAL _api_openwin, _api_putstrwin, _api_boxfilwin, _api_closewin
    10 00000000                                 	GLOBAL _api_initmalloc, _api_malloc, _api_free
    11 00000000                                 	GLOBAL _api_point, _api_refreshwin, _api_linewin
    12 00000000                                 
    13                                          [SECTION .text]
    14 00000000                                 ; 调用cons_putchar这个模式
    15 00000000                                 _api_putchar:	; void api_putchar(int c);
    16 00000000 BA 00000001                     	MOV	EDX, 1
    17 00000005 8A 44 24 04                     	MOV	AL, [ESP + 4]	; c
    18 00000009 CD 40                           	INT	0x40
    19 0000000B C3                              	RET
    20 0000000C                                 
    21 0000000C                                 _api_end:    	; void api_end(void);
    22 0000000C BA 00000004                     	MOV EDX, 4
    23 00000011 CD 40                               INT 0x40
    24 00000013                                 
    25 00000013                                 _api_putstr0:  ; void api_putstr0(char *s);
    26 00000013 53                                  PUSH EBX
    27 00000014 BA 00000002                     	MOV	EDX, 2
    28 00000019 8B 5C 24 08                     	MOV	EBX, [ESP + 8]	; S
    29 0000001D CD 40                           	INT	0x40
    30 0000001F 5B                              	POP	EBX
    31 00000020 C3                              	RET
    32 00000021                                 
    33 00000021                                 _api_openwin:	; int api_openwin(char *buf, int xsiz, int ysiz, int col_inv, char *title);
    34 00000021 57                              	PUSH EDI
    35 00000022 56                              	PUSH ESI
    36 00000023 53                              	PUSH EBX
    37 00000024 BA 00000005                     	MOV	EDX, 5
    38 00000029 8B 5C 24 10                     	MOV	EBX, [ESP + 16]	; buf
    39 0000002D 8B 74 24 14                     	MOV	ESI, [ESP + 20]	; xsiz
    40 00000031 8B 7C 24 18                     	MOV	EDI, [ESP + 24]	; ysiz
    41 00000035 8B 44 24 1C                     	MOV	EAX, [ESP + 28]	; col_inv
    42 00000039 8B 4C 24 20                     	MOV	ECX, [ESP + 32]	; title
    43 0000003D CD 40                           	INT	0x40
    44 0000003F 5B                              	POP	EBX
    45 00000040 5E                              	POP	ESI
    46 00000041 5F                              	POP	EDI
    47 00000042 C3                              	RET
    48 00000043                                 
    49 00000043                                 
    50 00000043                                 _api_putstrwin:	; void api_putstrwin(int win, int x, int y, int col, int len, char *str);
    51 00000043 57                              	PUSH EDI
    52 00000044 56                              	PUSH ESI
    53 00000045 55                              	PUSH EBP
    54 00000046 53                              	PUSH EBX
    55 00000047 BA 00000006                     	MOV	EDX, 6
    56 0000004C 8B 5C 24 14                     	MOV	EBX, [ESP + 20]	; win
    57 00000050 8B 74 24 18                     	MOV	ESI, [ESP + 24]	; x
    58 00000054 8B 7C 24 1C                     	MOV	EDI, [ESP + 28]	; y
    59 00000058 8B 44 24 20                     	MOV	EAX, [ESP + 32]	; col
    60 0000005C 8B 4C 24 24                     	MOV	ECX, [ESP + 36]	; len
    61 00000060 8B 6C 24 28                     	MOV	EBP, [ESP + 40]	; str
    62 00000064 CD 40                           	INT	0x40
    63 00000066 5B                              	POP	EBX
    64 00000067 5D                              	POP	EBP
    65 00000068 5E                              	POP	ESI
    66 00000069 5F                              	POP	EDI
    67 0000006A C3                              	RET
    68 0000006B                                 
    69 0000006B                                 _api_boxfilwin:	; void api_boxfilwin(int win, int x0, int y0, int x1, int y1, int col);
    70 0000006B 57                              	PUSH EDI
    71 0000006C 56                              	PUSH ESI
    72 0000006D 55                              	PUSH EBP
    73 0000006E 53                              	PUSH EBX
    74 0000006F BA 00000007                     	MOV	EDX, 7
    75 00000074 8B 5C 24 14                     	MOV	EBX, [ESP + 20]	; win
    76 00000078 8B 44 24 18                     	MOV	EAX, [ESP + 24]	; x0
    77 0000007C 8B 4C 24 1C                     	MOV	ECX, [ESP + 28]	; y0
    78 00000080 8B 74 24 20                     	MOV	ESI, [ESP + 32]	; x1
    79 00000084 8B 7C 24 24                     	MOV	EDI, [ESP + 36]	; y1
    80 00000088 8B 6C 24 28                     	MOV	EBP, [ESP + 40]	; col
    81 0000008C CD 40                           	INT	0x40
    82 0000008E 5B                              	POP	EBX
    83 0000008F 5D                              	POP	EBP
    84 00000090 5E                              	POP	ESI
    85 00000091 5F                              	POP	EDI
    86 00000092 C3                              	RET
    87 00000093                                 
    88 00000093                                 
    89 00000093                                 _api_initmalloc:	; void api_initmalloc(void);
    90 00000093 53                              	PUSH EBX
    91 00000094 BA 00000008                     	MOV	EDX, 8
    92 00000099 2E 8B 1D 00000020               	MOV	EBX, [CS:0x0020]	; malloc的内存地址空间
    93 000000A0 89 D8                           	MOV	EAX, EBX
    94 000000A2 05 00008000                     	ADD	EAX, 32 * 1024		; 因为管理内存空间的结构大小也要在其中存储，因此实际的内存起始地址在32kb之后
    95 000000A7 2E 8B 0D 00000000               	MOV	ECX, [CS:0x0000]	; 数据段大小
    96 000000AE 29 C1                           	SUB	ECX, EAX
    97 000000B0 CD 40                           	INT	0x40
    98 000000B2 5B                              	POP	EBX
    99 000000B3 C3                              	RET
   100 000000B4                                 
   101 000000B4                                 _api_malloc:		; char *api_malloc(int size);
   102 000000B4 53                              	PUSH EBX
   103 000000B5 BA 00000009                     	MOV	EDX, 9
   104 000000BA 2E 8B 1D 00000020               	MOV	EBX, [CS:0x0020]
   105 000000C1 8B 4C 24 08                     	MOV	ECX, [ESP + 8]		; size
   106 000000C5 CD 40                           	INT	0x40
   107 000000C7 5B                              	POP	EBX
   108 000000C8 C3                              	RET
   109 000000C9                                 
   110 000000C9                                 _api_free:			; void api_free(char *addr, int size);
   111 000000C9 53                              	PUSH EBX
   112 000000CA BA 0000000A                     	MOV	EDX, 10
   113 000000CF 2E 8B 1D 00000020               	MOV	EBX, [CS:0x0020]
   114 000000D6 8B 44 24 08                     	MOV	EAX, [ESP + 8]		; addr
   115 000000DA 8B 4C 24 0C                     	MOV	ECX, [ESP + 12]		; size
   116 000000DE CD 40                           	INT	0x40
   117 000000E0 5B                              	POP	EBX
   118 000000E1 C3                              	RET
   119 000000E2                                 
   120 000000E2                                 _api_point:		; void api_point(int win, int x, int y, int col);
   121 000000E2 57                              	PUSH EDI
   122 000000E3 56                              	PUSH ESI
   123 000000E4 53                              	PUSH EBX
   124 000000E5 BA 0000000B                     	MOV	EDX, 11
   125 000000EA 8B 5C 24 10                     	MOV	EBX, [ESP + 16]		; win
   126 000000EE 8B 74 24 14                     	MOV	ESI, [ESP + 20]		; x
   127 000000F2 8B 7C 24 18                     	MOV	EDI, [ESP + 24]		; y
   128 000000F6 8B 44 24 1C                     	MOV	EAX, [ESP + 28]		; col
   129 000000FA CD 40                           	INT	0x40
   130 000000FC 5B                              	POP	EBX
   131 000000FD 5E                              	POP	ESI
   132 000000FE 5F                              	POP	EDI
   133 000000FF C3                              	RET
   134 00000100                                 
   135 00000100                                 
   136 00000100                                 _api_refreshwin:	; void api_refreshwin(int win, int x0, int y0, int x1, int y1);
   137 00000100 57                              	PUSH EDI
   138 00000101 56                              	PUSH ESI
   139 00000102 53                              	PUSH EBX
   140 00000103 BA 0000000C                     	MOV	EDX, 12
   141 00000108 8B 5C 24 10                     	MOV	EBX, [ESP + 16]		; win
   142 0000010C 8B 44 24 14                     	MOV	EAX, [ESP + 20]		; x0
   143 00000110 8B 4C 24 18                     	MOV	ECX, [ESP + 24]		; y0
   144 00000114 8B 74 24 1C                     	MOV	ESI, [ESP + 28]		; x1
   145 00000118 8B 7C 24 20                     	MOV	EDI, [ESP + 32]		; y1
   146 0000011C CD 40                           	INT	0x40
   147 0000011E 5B                              	POP	EBX
   148 0000011F 5E                              	POP	ESI
   149 00000120 5F                              	POP	EDI
   150 00000121 C3                              	RET
   151 00000122                                 
   152 00000122                                 _api_linewin:		; void api_linewin(int win, int x0, int y0, int x1, int y1, int col);
   153 00000122 57                              	PUSH EDI
   154 00000123 56                              	PUSH ESI
   155 00000124 55                              	PUSH EBP
   156 00000125 53                              	PUSH EBX
   157 00000126 BA 0000000D                     	MOV	EDX, 13
   158 0000012B 8B 5C 24 14                     	MOV	EBX, [ESP + 20]	; win
   159 0000012F 8B 44 24 18                     	MOV	EAX, [ESP + 24]	; x0
   160 00000133 8B 4C 24 1C                     	MOV	ECX, [ESP + 28]	; y0
   161 00000137 8B 74 24 20                     	MOV	ESI, [ESP + 32]	; x1
   162 0000013B 8B 7C 24 24                     	MOV	EDI, [ESP + 36]	; y1
   163 0000013F 8B 6C 24 28                     	MOV	EBP, [ESP + 40]	; col
   164 00000143 CD 40                           	INT	0x40
   165 00000145 5B                              	POP	EBX
   166 00000146 5D                              	POP	EBP
   167 00000147 5E                              	POP	ESI
   168 00000148 5F                              	POP	EDI
   169 00000149 C3                              	RET
   170 0000014A                                 
   171 0000014A                                 _api_closewin:		; void api_closewin(int win)
   172 0000014A 53                                  PUSH EBX
   173 0000014B BA 0000000E                     	MOV	EDX, 14
   174 00000150 8B 5C 24 08                     	MOV	EBX, [ESP + 8]	; Win
   175 00000154 CD 40                           	INT 0x40
   176 00000156 5B                              	POP	EBX
   177 00000157 C3                              	RET
   178 00000158                                 
   179 00000158                                 _api_getkey: 		;int appi_getkey(int mode)
   180 00000158 BA 0000000F                         MOV EDX, 15
   181 0000015D 8B 44 24 04                     	MOV	EAX, [ESP + 4]
   182 00000161 CD 40                           	INT 0x40
   183 00000163 C3                              	RET
